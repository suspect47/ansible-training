---
# tasks file for sample-mysql

- name: Create a new primary partition with a size of "{{ partition_size }}"
  community.general.parted:
    device: "{{ block_device }}"
    number: "{{ partition_number }}"
    state: present
    part_end: "{{ partition_size }}"

- name: Create "{{ volume_group }}" volume group
  community.general.lvg:
    vg: "{{ volume_group }}"
    pvs: "{{ pvs }}"

- name: Create a logical volume "{{ logical_volume }}" of "{{ volume_size }}".
  community.general.lvol:
    vg: "{{ volume_group }}"
    lv: "{{ logical_volume }}"
    size: "{{ volume_size }}"

- name: Create a "{{ file_system_type }}" filesystem on 
  community.general.filesystem:
    fstype: "{{ file_system_type }}"
    dev: "{{ volume_path }}"

- name: Create a directory "{{ mount_volume_path }}"
  ansible.builtin.file:
    path: "{{ mount_volume_path }}"
    state: directory
    mode: '0755'

- name: Mount volume
  ansible.posix.mount:
    src: "{{ volume_src }}"
    path: "{{ mount_volume_path }}"
    opts: rw
    state: mounted
    fstype: "{{ file_system_type }}"

- name: Install package "{{ package_1 }}"
  package:
    name: "{{ package_1 }}"
    state: latest

- name: Install package "{{ package_2 }}"
  package:
    name: "{{ package_2 }}"
    state: latest

- name: permit traffic in default zone on port "{{ port_number }}"
  ansible.posix.firewalld:
    port: "{{ port_number }}"
    permanent: yes
    state: enabled

- name: Enable "{{ service }}" service
  ansible.builtin.systemd:
    name: "{{ service }}"
    enabled: yes

- name: Start "{{ service }}" service
  ansible.builtin.service:
    name: "{{ service }}"
    state: started

- name: Editing mysql "{{ user }}" password
  community.mysql.mysql_user:
    name: "{{ user }}"
    password: "{{ database_password }}"
    check_implicit_admin: yes
    login_user: "{{ user }}"
    login_password: "{{ database_password }}"
    state: present

- name: Generate mysql server config file
  template:
    src: "{{ source_file }}"
    dest: "{{ destin_file }}"
  notify:
    - Restart "{{ service }}"
